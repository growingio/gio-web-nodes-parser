export declare function arrayFrom(arrayLike: ArrayLike<any>): any[];
export declare function niceTry(fn: () => any): any;
export declare function isType(o: any, type: string): boolean;
export declare function isNil(o: any): boolean;
export declare function isNumber(o: any): boolean;
export declare function isBoolean(o: any): boolean;
export declare function isObject(o: any): boolean;
export declare function isString(o: any): boolean;
export declare function isArray(o: any): boolean;
export declare function last(o: any[] | ArrayLike<any>): any;
export declare function find(o: any[], fn: (item: any) => boolean): any;
export declare function findIndex(o: any[], fn: (item: any) => boolean, fromLast?: boolean): number;
export declare function findLastIndex(o: any[], fn: (item: any) => boolean): number;
export declare function includes(o: any[] | string, target: any): boolean;
export declare function keys(o: any): string[];
export declare function isEmpty(o: any): boolean;
export declare function compact(o: any[]): any[];
export declare function typeOf(o: any): string;
export declare function assign(target: any, ...sources: any[]): any;
export declare function values(o: any): any[];
export declare function entries(o: any): [string, any][];
